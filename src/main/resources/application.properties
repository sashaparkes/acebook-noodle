spring.profiles.active=dev
spring.data.rest.base-path=/api
spring.datasource.platform=postgres
spring.jpa.hibernate.ddl-auto=validate
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web.client.RestTemplate=DEBUG
logging.level.org.apache.http=DEBUG
file.upload-dir.user-profile=uploads/user_profile
file.upload-dir.post-images=uploads/post_images
spring.web.resources.static-locations=classpath:/static/,file:uploads/
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB

# === Render PostgreSQL environment support ===
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=${SPRING_DATASOURCE_DRIVER_CLASS_NAME:org.postgresql.Driver}
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:update}

server.servlet.session.tracking-modes=cookie

# === OAuth2 (Auth0) Configuration ===
spring.security.oauth2.client.registration.auth0.client-id=${OKTA_CLIENT_ID}
spring.security.oauth2.client.registration.auth0.client-secret=${OKTA_CLIENT_SECRET}
spring.security.oauth2.client.registration.auth0.scope=openid profile email
spring.security.oauth2.client.registration.auth0.redirect-uri={baseUrl}/login/oauth2/code/auth0
spring.security.oauth2.client.registration.auth0.client-name=Auth0
spring.security.oauth2.client.registration.auth0.authorization-grant-type=authorization_code

spring.security.oauth2.client.provider.auth0.issuer-uri=https://dev-11mkptye4o4w052e.us.auth0.com